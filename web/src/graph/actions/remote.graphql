mutation createRemote($name: String!, $uri: String!, $archetype: Archetype!, $transport: ID!) {
    createRemote(input: {name: $name, uri: $uri, archetype: $archetype, transport: $transport, authMode: NONE}) {
        id
    }
}
mutation patchRemote($id: ID!, $transportID: ID!, $allowed: [String!]!, $blocked: [String!]!, $authHeaders: [String!]!, $directHeader: String!, $directToken: String!, $authMode: AuthMode!) {
    patchRemote(id: $id, input: {transportID: $transportID, allowed: $allowed, blocked: $blocked, authHeaders: $authHeaders, directHeader: $directHeader, directToken: $directToken, authMode: $authMode}) {
        id
    }
}
mutation deleteRemote($id: ID!) {
    deleteRemote(id: $id)
}
query getRemote($id: ID!) {
    getRemote(id: $id) {
        id
        createdAt
        updatedAt
        name
        uri
        archetype
        enabled
        security {
            id
            allowed
            blocked
            authMode
            directHeader
            directToken
            authHeaders
        }
        transport {
            id
            name
            cert
            key
            ca
            skipTLSVerify
            httpProxy
            httpsProxy
            noProxy
        }
    }
}
query listRemotes($arch: String!) {
    listRemotes(arch: $arch) {
        id
        name
        updatedAt
        createdAt
        uri
        enabled
        archetype
    }
}