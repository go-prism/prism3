image:
  pullPolicy: Never
podAnnotations:
  app.kubernetes.io/name: core
  app.kubernetes.io/part-of: prism3
  linkerd.io/inject: enabled
env:
  PRISM_AUTH_SUPER_USER: "https://gitlab.dcas.dev/4"
  PRISM_DB_DSN: "user=prism password=password dbname=prism host=postgresql port=5432 sslmode=disable"
  PRISM_S3_REGION: "us-east-1"
  PRISM_S3_PATH_STYLE: "true"
  PRISM_S3_ENDPOINT: http://minio.minio.svc.cluster.local:9000
  PRISM_S3_BUCKET: prism
  PRISM_LOG_LEVEL: "10"
  PRISM_PUBLIC_URL: https://prism3.devel
  PRISM_PLUGIN_GO_URL: http://goproxy3-auto-deploy:8080
  PRISM_PLUGIN_RBAC_URL: localhost:8082
  PRISM_REDIS_ADDR: redis-master:6379
  PRISM_REDIS_PASSWORD: password
  PRISM_OTEL_SAMPLE_RATE: "1"
  PRISM_OTEL_ENABLED: "true"
  AWS_ACCESS_KEY_ID: username
  AWS_SECRET_ACCESS_KEY: password
  HELM_CACHE_HOME: /tmp
  HELM_CONFIG_HOME: /tmp
  HELM_DATA_HOME: /tmp
  OTEL_EXPORTER_JAEGER_ENDPOINT: http://tempo.grafana.svc.cluster.local:14268/api/traces
security:
  podContext:
    fsGroup: 1001
    runAsUser: 1001
    runAsGroup: 1001
  containerContext:
    runAsNonRoot: true
    runAsGroup: 1001
    runAsUser: 1001
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    privileged: false
    capabilities:
      drop:
        - ALL
hpa:
  enabled: false
service:
  externalPort: 8080
  internalPort: 8081
  url: https://prism3.devel
ingress:
  enabled: true
  path: /api
  extraPaths:
    - /auth
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: "iss-kube"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000"
#    nginx.ingress.kubernetes.io/auth-tls-secret: cert-manager/ca-dcas-dev
#    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
#    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
  tls:
    enabled: true
    secretName: tls-prism3-core
prometheus:
  metrics: false
livenessProbe:
  path: "/healthz"
  port: 8080
readinessProbe:
  path: "/healthz"
  port: 8080
volumes:
  - name: tmp
    mountPath: /tmp
    config:
      emptyDir: {}
  - name: rbac
    mountPath: /var/run/config/rbac
    config:
      configMap:
        name: prism-rbac
resources:
  requests:
    cpu: 100m
    memory: 200Mi
sidecars:
  - name: rbac
    image: dev.local/go-rbac-proxy:latest
    imagePullPolicy: Never
    env:
      - name: PORT
        value: "8082"
      - name: APP_LOG_LEVEL
        value: "10"
      - name: APP_CONFIG_PATH
        value: /var/run/config/rbac/config.yaml
      - name: OTEL_EXPORTER_JAEGER_ENDPOINT
        value: http://tempo.grafana.svc.cluster.local:14268/api/traces
      - name: APP_OTEL_SAMPLE_RATE
        value: "1"
      - name: APP_OTEL_ENABLED
        value: "true"
    volumeMounts:
      - name: rbac
        mountPath: /var/run/config/rbac
        readOnly: true
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8082
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8082
    securityContext:
      runAsNonRoot: true
      runAsGroup: 1001
      runAsUser: 1001
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      privileged: false
      capabilities:
        drop:
          - ALL
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 200Mi
  - name: captain
    image: harbor.dcas.dev/registry.gitlab.com/av1o/cap10:master
    imagePullPolicy: Always
    env:
      - name: PROXY_TARGET
        value: "http://localhost:8080"
      - name: PROXY_PROBE_PATH
        value: "/healthz"
      - name: PORT
        value: "8081"
      - name: BASE_URL
        value: "https://prism3.devel"
      - name: OIDC_COOKIE_SAME_SITE
        value: "None"
      - name: OIDC_REDIRECT_URL
        value: "https://prism3.devel/auth/callback"
    envFrom:
      - secretRef:
          name: oidc
    ports:
      - name: http
        containerPort: 8081
        protocol: TCP
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8081
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8081
    securityContext:
      runAsNonRoot: true
      runAsGroup: 1001
      runAsUser: 1001
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      privileged: false
      capabilities:
        drop:
          - ALL
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 200Mi
