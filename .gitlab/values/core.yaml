podAnnotations:
  app.kubernetes.io/name: core
  app.kubernetes.io/part-of: prism
env:
  HELM_CACHE_HOME: /tmp
  HELM_CONFIG_HOME: /tmp
  HELM_DATA_HOME: /tmp
security:
  podContext:
    fsGroup: 1001
    runAsUser: 1001
    runAsGroup: 1001
    seccompProfile:
      type: RuntimeDefault
  containerContext:
    runAsNonRoot: true
    runAsGroup: 1001
    runAsUser: 1001
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    privileged: false
    capabilities:
      drop:
        - ALL
service:
  externalPort: 8080
  internalPort: 8081
ingress:
  enabled: true
  className: gitlab-nginx
  path: /api
  extraPaths: ["/auth"]
  annotations:
    cert-manager.io/cluster-issuer: "k2-internal"
  tls:
    enabled: true
    secretName: tls-core
prometheus:
  metrics: true
  serviceMonitor:
    enabled: true
livenessProbe:
  path: "/healthz"
  port: 8080
readinessProbe:
  path: "/healthz"
  port: 8080
volumes:
  - name: tmp
    mountPath: /tmp
    config:
      emptyDir: {}
resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    memory: 200Mi
sidecars:
  - name: captain
    image: harbor.dcas.dev/registry.gitlab.com/av1o/cap10:master
    imagePullPolicy: Always
    env:
      - name: PROXY_TARGET
        value: "http://localhost:8080"
      - name: PROXY_PROBE_PATH
        value: "/healthz"
      - name: PORT
        value: "8081"
    envFrom:
      - secretRef:
          name: prod-core-99-secret
    ports:
      - name: http
        containerPort: 8081
        protocol: TCP
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8081
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8081
    securityContext:
      runAsNonRoot: true
      runAsGroup: 1001
      runAsUser: 1001
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      privileged: false
      capabilities:
        drop:
          - ALL
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 200Mi
networkPolicy:
  enabled: true
  spec:
    podSelector:
      matchLabels:
        app.kubernetes.io/name: core
        app.kubernetes.io/part-of: prism
    ingress:
      - ports:
          - port: 8080
      - from:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ingress-nginx
          - podSelector:
              matchLabels:
                app: prometheus
            namespaceSelector:
              matchLabels:
                meta.kubernetes.io/name: openshift-monitoring